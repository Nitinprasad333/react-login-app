[{"D:\\react\\responsive-app\\resp-app\\src\\index.js":"1","D:\\react\\responsive-app\\resp-app\\src\\reportWebVitals.js":"2","D:\\react\\responsive-app\\resp-app\\src\\App.js":"3","D:\\react\\responsive-app\\resp-app\\src\\components\\Login.js":"4","D:\\react\\responsive-app\\resp-app\\src\\components\\Routes.js":"5","D:\\react\\responsive-app\\resp-app\\src\\saga\\saga.js":"6","D:\\react\\responsive-app\\resp-app\\src\\redux\\reducers\\countReducer.js":"7","D:\\react\\responsive-app\\resp-app\\src\\actions\\actionTypes.js":"8","D:\\react\\responsive-app\\resp-app\\src\\redux\\reducers\\reduxActions\\actions.js":"9","D:\\react\\responsive-app\\resp-app\\src\\redux\\reducers\\rootReducer.js":"10","D:\\react\\responsive-app\\resp-app\\src\\common\\commonState.js":"11","D:\\react\\responsive-app\\resp-app\\src\\saga\\rootSaga.js":"12","D:\\react\\responsive-app\\resp-app\\src\\components\\Devloper.js":"13"},{"size":1545,"mtime":1610966278810,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":9004,"mtime":1610970343494,"results":"17","hashOfConfig":"15"},{"size":3724,"mtime":1610974299714,"results":"18","hashOfConfig":"15"},{"size":981,"mtime":1610969225692,"results":"19","hashOfConfig":"15"},{"size":2546,"mtime":1610967959093,"results":"20","hashOfConfig":"15"},{"size":1917,"mtime":1610968032778,"results":"21","hashOfConfig":"15"},{"size":644,"mtime":1610967746646,"results":"22","hashOfConfig":"15"},{"size":2172,"mtime":1610972842396,"results":"23","hashOfConfig":"15"},{"size":183,"mtime":1610953991132,"results":"24","hashOfConfig":"15"},{"size":649,"mtime":1610965454282,"results":"25","hashOfConfig":"15"},{"size":185,"mtime":1610966311585,"results":"26","hashOfConfig":"15"},{"size":901,"mtime":1610971859174,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"1si2tem",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\responsive-app\\resp-app\\src\\index.js",["60","61","62","63"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nimport Login from './components/Login';\nimport Routes from './components/Routes';\nimport { createStore,applyMiddleware,compose,combineReducers  } from 'redux';\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport watchIncrement from '../src/saga/saga';\nimport {rootReducer } from '../src/redux/reducers/rootReducer';\nimport { loadState, saveState } from '../src/common/commonState';\nimport _ from \"lodash\";\nimport watchersRootSaga from './saga/rootSaga';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const persistedState = loadState();\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  \n  \n  \n  const store = createStore(rootReducer,persistedState,\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n  );\n  \n  sagaMiddleware.run(watchersRootSaga);\n\n  store.subscribe(_.throttle(() => {\n    saveState(store.getState());\n  }, 1000));\n\nreturn store; \n}\n\nconst store = configureStore();\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Routes/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["64","65"],"D:\\react\\responsive-app\\resp-app\\src\\reportWebVitals.js",[],"D:\\react\\responsive-app\\resp-app\\src\\App.js",["66","67","68","69","70","71"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Logo from \"./images/avatar.png\";\nimport { Card, Button, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport Background from './images/colorful.jpg'; \nimport { connect } from \"react-redux\";\nimport {showAleart,closeAleart, add, sub, reset,\n  showDevName,LogoutAction} from './redux/reducers/reduxActions/actions'\n\nfunction App(props) {\n  let [posts, setPosts] = useState([]);\n  let [allData, setAllData] = useState([]);\n  let [showPosts, setShow] = useState(false);\n  let [rowData, setRowData] = useState(\"\");\n  let [search, setSearch] = useState(\"\");\n  let [found,setFound] = useState([]);\n  let [myData, setMyData] = useState([\n    {\n      userId: 1,\n      id: 1,\n      title: \"delectus aut autem\",\n      completed: false,\n    },\n    {\n      userId: 1,\n      id: 2,\n      title: \"quis ut nam facilis et officia qui\",\n      completed: false,\n    },\n    { userId: 1, id: 3, title: \"fugiat veniam minus\", completed: false },\n  ]);\n  let [title, setTitle] = useState(\"\");\n  let [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    let mounted = true;\n    console.log(\"useeffectrun\");\n\n\n    \n    getPosts();\n    if (search ) {\n      console.log(\"ifblockuse\",JSON.parse (search))\n      setTimeout(() => {\n        b(JSON.parse(search))\n      }, 500);\n        \n \n      console.log(\"ifblockuse data1\",found)\n    }\n    console.log(\"ifblockuse data\",b())\n    console.log(\"posts\", posts);\n    return () => (mounted = false);\n  }, [search]);\n\n  const getPosts = () => {\n    if (posts.length === 0) {\n      return axios\n        .get(\"http://jsonplaceholder.typicode.com/todos\")\n        .then((rst) => {\n          console.log(rst);\n          if (rst) {\n            setPosts((rst.data));\n            setAllData(rst.data)\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const getRowData = (data) => {\n    console.log(\"row Data\", data);\n    setRowData(data);\n  };\n\n  const showAllPosts = () => {\n    setShow(true);\n    console.log(\"my Array\", myData);\n\n  };\n\n  const hideAllPosts = () => {\n    setShow(false);\n  };\n\n  const addTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const addUser = (e) => {\n    setUser(e.target.value);\n  };\n\n  const submitDetail = (e) => {\n    e.preventDefault();\n    if (title === \"\" || user === \"\") {\n      alert(\"Blank not allowed\");\n    }\n    let Data = {\n      title: title,\n      id: user,\n    };\n\n    posts.push(Data);\n    allData.push(Data);\n\n    setTitle(\"\");\n    setUser(\"\");\n  };\n\n  const logOut = () => {\n    props.LogoutAction()\n     props.history.push(\"/\");\n  };\n\n  const removePost = (data) => {\n    console.log(\"removeclick\", data);\n    const newData = posts.filter((rst, id) => {\n      return rst.title !== data.title;\n    });\n\n    setPosts(newData);\n    setAllData(newData)\n  };\n\n const searchHandler= (e)=>{\n\n  const val = e.target.value\n   setSearch(val)\n   if (val !== search) {\n    console.log(\"if searchfinal\",b())\n   }\n\n   \n\n \n  }\n\n  function b(idToSearch) {\n    if (idToSearch && search !== \"\") {\n    let foundrst=  allData.filter(item => {\n        console.log(\"ifblockuse function b\",item.id,idToSearch)\n        return   item.id == (idToSearch)\n      })\nconsole.log(\"if dataaaaafound\",foundrst)\n      setFound(foundrst);\n      setPosts(foundrst)\n    }\n\n\n    \n  };\n\n\n\n  return (\n    \n    <div class=\"container\" style={{ \n      backgroundColor:'whitesmoke',\n      backgroundImage:`url(${Background})`, \n      height:showPosts ? \"\" : '100vh' }}>\n        \n      <div class=\"row\" style={{ backgroundColor: \"teal\",height:40 }}>\n        <div class=\"col-8\">\n          <h2 style={{ color: \"whitesmoke\" }}>{props.title}</h2>  \n         \n        </div>\n        \n        <div class=\"col-4\">\n          <div\n            style={{\n              display: \"flex\",\n              color: \"#000\",\n              justifyContent: \"flex-end\",\n            }}\n            onClick={logOut}\n          >\n        <img src={Logo} width=\"30px\" height=\"30px\" /> &nbsp; <p>Logout</p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\" style={{ marginTop: \"20px\" }}>\n        <div class=\"col-8\">\n          <button\n            class=\"btn btn-success sm\"\n            onClick={showAllPosts}\n            style={{ width: \"100px\" }}\n          >\n            Show Posts\n          </button>\n        </div>\n\n        <div class=\"col-4\">\n          <button class=\"btn btn-primary sm\" onClick={hideAllPosts}>\n            Hide Posts\n          </button>\n        </div>\n      </div>\n\n      {rowData && showPosts && (\n        <div>\n          <lable>Selected Row Details are :</lable> <br />\n          <lable> Post Title : {rowData.title}</lable>\n          <br />\n          <lable> Post Created By : {rowData.userId}</lable>\n          <br />\n          <lable> Is Completed : {JSON.stringify(rowData.completed)}</lable>\n        </div>\n      )}\n\n      <div class=\"form-group\">\n        {\" \"}\n        <br />\n        <form onSubmit={submitDetail}>\n          <input\n            class=\"form-control\"\n            placeholder=\"*Enter title\"\n            value={title}\n            onChange={addTitle}\n            name=\"title\"\n          />{\" \"}\n          <br />\n          <input\n            class=\"form-control\"\n            placeholder=\"*Enter userid\"\n            value={user}\n            onChange={addUser}\n            name=\"password\"\n          />\n          <br />\n          <input\n            type=\"submit\"\n            style={{ borderRadius: \"16px\" }}\n            class=\"btn btn-danger\"\n          />\n        </form>\n      </div> <br/>\n\n      <input\n            class=\"form-control\"\n            placeholder=\"search id\"\n            value={search}\n            type='number'\n            onChange={searchHandler.bind(this)}\n          />{\" \"}\n\n\n      <hr />\n      <div><Link to ='/dev'><a>Connect to Developer</a></Link></div> <br/>\n  {\n    !showPosts && (\n      <Card style={{backgroundColor:'silver'}}>\n      <Card.Content >\n        <Card.Header>{props.count}</Card.Header>\n        <Card.Meta>Counter updating from Reducer</Card.Meta>\n      </Card.Content>\n      <Card.Content extra>\n        <div class=\"ui three buttons\">\n          <Button basic color=\"green\" onClick={()=>props.add(1)}>\n            Add\n          </Button>\n          <Button\n            basic\n            color=\"red\"\n            onClick={()=>props.sub(1)}\n          >\n            Subs\n          </Button>\n          <Button\n            basic\n            color=\"blue\"\n            onClick={()=>props.reset()}\n          >\n            Reset\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n    )\n  }\n      \n\n\n      {\n        showPosts && (\n          <Card.Group>\n         { search ?  posts.map((data, i) => {\n          return (\n            <Card key={data.id}>\n              <Card.Content onClick={getRowData.bind(this, data)}>\n                <Image floated=\"right\" size=\"mini\" src={Logo} />\n                <Card.Header>{data.id}</Card.Header>\n                <Card.Meta>{JSON.stringify(data.completed)}</Card.Meta>\n                <Card.Description>{data.title}</Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <div class=\"ui two buttons\">\n                  <Button basic color=\"green\">\n                    Approve\n                  </Button>\n                  <Button\n                    basic\n                    color=\"red\"\n                    onClick={removePost.bind(this, data)}\n                  >\n                    Remove\n                  </Button>\n                </div>\n              </Card.Content>\n            </Card>\n          );\n        }) : allData.map((data, i) => {\n          return (\n            <Card key={data.user}>\n              <Card.Content onClick={getRowData.bind(this, data)}>\n                <Image floated=\"right\" size=\"mini\" src={Logo} />\n                <Card.Header>{data.id}</Card.Header>\n                <Card.Meta>{JSON.stringify(data.completed)}</Card.Meta>\n                <Card.Description>{data.title}</Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <div class=\"ui two buttons\">\n                  <Button basic color=\"green\">\n                    Approve\n                  </Button>\n                  <Button\n                    basic\n                    color=\"red\"\n                    onClick={removePost.bind(this, data)}\n                  >\n                    Remove\n                  </Button>\n                </div>\n              </Card.Content>\n            </Card>\n          );\n        }) }\n      </Card.Group>\n        )\n      }\n      \n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    count:state.countRed.counter,\n    devName:state.countRed.devName,\n    title:state.countRed.title,\n    appToken:state.countRed.appToken,\n  \n  };\n};\n\nexport default connect(mapStateToProps, \n  { showAleart, \n    closeAleart,\n    add,\n    sub,\n    reset,\n    showDevName,\n    LogoutAction \n})(App);\n\n","D:\\react\\responsive-app\\resp-app\\src\\components\\Login.js",["72","73","74"],"D:\\react\\responsive-app\\resp-app\\src\\components\\Routes.js",["75","76"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport Login from \"./Login\";\r\nimport App from \"../App\";\r\nimport Devloper from \"./Devloper\";\r\n\r\nconst Routes = (props) => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n       {\r\n         props.appToken !== null ? \r\n         <Switch>\r\n           <Route exact path=\"/dashboard\" component={App} />\r\n\r\n           <Route exact path=\"/dev\" component={Devloper} />\r\n           </Switch>\r\n         : \"\"\r\n\r\n       }\r\n        \r\n      \r\n          \r\n    \r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    count:state.countRed.counter,\r\n    devName:state.countRed.devName,\r\n    title:state.countRed.title,\r\n    appToken:state.countRed.appToken,\r\n  \r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, \r\n  {  })(Routes);\r\n\r\n","D:\\react\\responsive-app\\resp-app\\src\\saga\\saga.js",["77","78","79","80","81","82"],"import {\r\n    INCREMENT_ASYNC,\r\n    INCREMENT_ACT,\r\n    SEND_SUCCESS,\r\n    SHOW_NAME,\r\n    DEV_NAME,\r\n    SAVE_TOKEN,\r\n    INIT_TOKEN,\r\n    LOG_OUT,\r\n    LOGOUT_INIT\r\n  } from '../actions/actionTypes';\r\n  import {\r\n    takeLatest,\r\n    takeEvery,\r\n    call,\r\n    put,\r\n    delay,\r\n    resolve,\r\n    take,\r\n    fork,\r\n    cancel\r\n  } from \"redux-saga/effects\";\r\n \r\n  import axios from \"axios\";\r\n  \r\n  import { getDummyApi } from '../redux/reducers/reduxActions/actions'\r\n  \r\n  // This is Worker Saga Generator Function which work on Given Action Asyncronsally.Genrally use for Side Effects(API CALL Etc.)\r\n  \r\n  function* incrementAsync(action) {\r\n    yield delay(3000);\r\n    yield put({\r\n      type: INCREMENT_ASYNC\r\n    });\r\n    // yield put({\r\n  \r\n    //   type: SEND_SUCCESS,\r\n    //   payload: {\r\n    //     apiData:123 ,\r\n    //   }\r\n    // });\r\n    try {\r\n      \r\n      const response1 = yield call(getDummyApi);\r\n      // yield cancel(response1);\r\n  \r\n      console.log(\"APIResponseSAGA\", response1);\r\n      const APD = response1;\r\n      console.log(\"APD\", APD);\r\n  \r\n      yield localStorage.setItem(\"Data1\", JSON.stringify(response1));\r\n  \r\n      yield put({\r\n        type: SEND_SUCCESS,\r\n        payload: {\r\n          apiData: APD\r\n        }\r\n      });\r\n      return response1;\r\n    } catch (e) {}\r\n  }\r\n\r\n\r\n\r\n  function* showDevName(action) { \r\n      console.log(\"ShowDevname Saga\",action)\r\n      yield put({\r\n        type: SHOW_NAME,\r\n        payload: {\r\n          name: \"Nitin\"\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  function* saveUserToken(action) { \r\n    console.log(\"saveUserToken Saga\",action.payload)\r\n    yield put({\r\n      type: SAVE_TOKEN,\r\n      payload: {\r\n        tokenData: action.payload.token\r\n      }\r\n    });\r\n\r\n}\r\n\r\nfunction* logOutCurrUser(action) { \r\n    console.log(\"logOutCurrUser Saga\",action.payload)\r\n    yield put({\r\n      type: LOG_OUT,\r\n      payload: {\r\n      \r\n      }\r\n    });\r\n\r\n}\r\n  \r\n\r\n  \r\n  // This is Watcher Saga Generator Function which watch the Action \"INCREMENT_ACT\" in App then\r\n  // run the second Argument of function i.e incrementAsync Function.\r\n  //  Note-:Never Pass the Action Used in Watcher Saga to the Worker Saga as it tends to a loop\r\n  //  Rember that Saga take a Action & return new Updated Action.\r\n  function* watchIncrement() {\r\n    yield takeLatest(INCREMENT_ACT, incrementAsync);\r\n    yield takeLatest(DEV_NAME, showDevName);\r\n    yield takeLatest(INIT_TOKEN, saveUserToken);\r\n    yield takeLatest(LOGOUT_INIT, logOutCurrUser);\r\n  }\r\n  \r\n  export default watchIncrement;\r\n\r\n\r\n  ","D:\\react\\responsive-app\\resp-app\\src\\redux\\reducers\\countReducer.js",["83","84","85"],"import React from \"react\";\r\nimport {\r\n    INCREMENT_ACT,\r\n  DECREMENT_ACT,\r\n  ADD,\r\n  SUB,\r\n  RESET,\r\n  INCREMENT_ASYNC,\r\n  SHOW_ALEART,\r\n  CLOSE_ALEART,\r\n  SEND_SUCCESS,\r\n  SHOW_NAME,\r\n  SAVE_TOKEN,\r\n  LOG_OUT\r\n} from  '../../actions/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n  counter: 5,\r\n  showAleart: false,\r\n  apiDataUse:{},\r\n  devName:'',\r\n  title:\"React CRUD App\",\r\n  appToken:null\r\n};\r\n\r\nconst CounterReducer = (state = initialState, action) => {\r\n  console.log(\"Reducer Call\")\r\n  switch (action.type) {\r\n    case INCREMENT_ASYNC:\r\n      return { ...state, counter: state.counter + 1 };\r\n    case DECREMENT_ACT:\r\n      return { ...state, counter: state.counter - 1 };\r\n    case ADD:\r\n      return { ...state, counter: state.counter + action.payload.number };\r\n    case SUB:\r\n      return { ...state, counter: state.counter - action.payload.number };\r\n    case RESET:\r\n      return { ...state, counter: 0 };\r\n    case INCREMENT_ASYNC:\r\n      return { ...state, counter: state.counter };\r\n    case SHOW_ALEART:\r\n      return { ...state, showAleart: true };\r\n    case CLOSE_ALEART:\r\n      return { ...state, showAleart: false };\r\n      case SEND_SUCCESS:\r\n          console.log(\"SEND_SUCCESSCALL\",action.payload)\r\n        return { ...state,\r\n          apiDataUse:action.payload.apiData};\r\n\r\n          case SHOW_NAME:\r\n            console.log(\"SHOW_NAME REDUCER\",action.payload)\r\n          return { \r\n              ...state,\r\n              devName:\"Nitin\"\r\n            };\r\n            case SAVE_TOKEN:\r\n                console.log(\"SAVE_TOKEN Reducer\",action.payload)\r\n              return { ...state,\r\n                appToken:action.payload.tokenData};\r\n\r\n                case LOG_OUT:\r\n                console.log(\"LOG_OUT Reducer\",action.payload)\r\n              return { ...state,\r\n                appToken:null\r\n            };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default CounterReducer;\r\n","D:\\react\\responsive-app\\resp-app\\src\\actions\\actionTypes.js",[],"D:\\react\\responsive-app\\resp-app\\src\\redux\\reducers\\reduxActions\\actions.js",["86"],"D:\\react\\responsive-app\\resp-app\\src\\redux\\reducers\\rootReducer.js",[],"D:\\react\\responsive-app\\resp-app\\src\\common\\commonState.js",[],"D:\\react\\responsive-app\\resp-app\\src\\saga\\rootSaga.js",[],"D:\\react\\responsive-app\\resp-app\\src\\components\\Devloper.js",["87","88"],{"ruleId":"89","severity":1,"message":"90","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":11},{"ruleId":"89","severity":1,"message":"93","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":13},{"ruleId":"89","severity":1,"message":"94","line":9,"column":46,"nodeType":"91","messageId":"92","endLine":9,"endColumn":61},{"ruleId":"89","severity":1,"message":"95","line":12,"column":8,"nodeType":"91","messageId":"92","endLine":12,"endColumn":22},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"89","severity":1,"message":"100","line":18,"column":16,"nodeType":"91","messageId":"92","endLine":18,"endColumn":25},{"ruleId":"89","severity":1,"message":"101","line":54,"column":19,"nodeType":"91","messageId":"92","endLine":54,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":55,"column":6,"nodeType":"104","endLine":55,"endColumn":14,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":146,"column":26,"nodeType":"108","messageId":"109","endLine":146,"endColumn":28},{"ruleId":"110","severity":1,"message":"111","line":181,"column":9,"nodeType":"112","endLine":181,"endColumn":54},{"ruleId":"113","severity":1,"message":"114","line":253,"column":29,"nodeType":"112","endLine":253,"endColumn":32},{"ruleId":"89","severity":1,"message":"115","line":11,"column":8,"nodeType":"91","messageId":"92","endLine":11,"endColumn":12},{"ruleId":"102","severity":1,"message":"116","line":23,"column":6,"nodeType":"104","endLine":23,"endColumn":22,"suggestions":"117"},{"ruleId":"89","severity":1,"message":"118","line":69,"column":9,"nodeType":"91","messageId":"92","endLine":69,"endColumn":23},{"ruleId":"89","severity":1,"message":"119","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"120","line":2,"column":40,"nodeType":"91","messageId":"92","endLine":2,"endColumn":44},{"ruleId":"89","severity":1,"message":"121","line":14,"column":5,"nodeType":"91","messageId":"92","endLine":14,"endColumn":14},{"ruleId":"89","severity":1,"message":"122","line":18,"column":5,"nodeType":"91","messageId":"92","endLine":18,"endColumn":12},{"ruleId":"89","severity":1,"message":"123","line":19,"column":5,"nodeType":"91","messageId":"92","endLine":19,"endColumn":9},{"ruleId":"89","severity":1,"message":"124","line":20,"column":5,"nodeType":"91","messageId":"92","endLine":20,"endColumn":9},{"ruleId":"89","severity":1,"message":"125","line":21,"column":5,"nodeType":"91","messageId":"92","endLine":21,"endColumn":11},{"ruleId":"89","severity":1,"message":"126","line":24,"column":10,"nodeType":"91","messageId":"92","endLine":24,"endColumn":15},{"ruleId":"89","severity":1,"message":"127","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":13},{"ruleId":"89","severity":1,"message":"128","line":3,"column":5,"nodeType":"91","messageId":"92","endLine":3,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":40,"column":5,"nodeType":"131","messageId":"109","endLine":41,"endColumn":51},{"ruleId":"89","severity":1,"message":"132","line":3,"column":42,"nodeType":"91","messageId":"92","endLine":3,"endColumn":54},{"ruleId":"110","severity":1,"message":"111","line":8,"column":7,"nodeType":"112","endLine":8,"endColumn":27},{"ruleId":"113","severity":1,"message":"114","line":13,"column":9,"nodeType":"112","endLine":13,"endColumn":12},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'combineReducers' is defined but never used.","'watchIncrement' is defined but never used.","no-native-reassign",["133"],"no-negated-in-lhs",["134"],"'setMyData' is assigned a value but never used.","'mounted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'b', 'found', 'getPosts', and 'posts'. Either include them or remove the dependency array.","ArrayExpression",["135"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'term' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'token'. Either include them or remove the dependency array.",["136"],"'confirmHandler' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'takeEvery' is defined but never used.","'resolve' is defined but never used.","'take' is defined but never used.","'fork' is defined but never used.","'cancel' is defined but never used.","'axios' is defined but never used.","'React' is defined but never used.","'INCREMENT_ACT' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","'SEND_SUCCESS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [b, found, getPosts, posts, search]",{"range":"141","text":"142"},"Update the dependencies array to be: [props.appToken, props.history, token]",{"range":"143","text":"144"},[1538,1546],"[b, found, getPosts, posts, search]",[737,753],"[props.appToken, props.history, token]"]