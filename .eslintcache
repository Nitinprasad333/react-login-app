[{"D:\\react\\responsive-app\\resp-app\\src\\index.js":"1","D:\\react\\responsive-app\\resp-app\\src\\reportWebVitals.js":"2","D:\\react\\responsive-app\\resp-app\\src\\App.js":"3","D:\\react\\responsive-app\\resp-app\\src\\components\\Login.js":"4","D:\\react\\responsive-app\\resp-app\\src\\components\\Routes.js":"5","D:\\react\\responsive-app\\resp-app\\src\\saga\\saga.js":"6","D:\\react\\responsive-app\\resp-app\\src\\redux\\reducers\\countReducer.js":"7","D:\\react\\responsive-app\\resp-app\\src\\actions\\actionTypes.js":"8","D:\\react\\responsive-app\\resp-app\\src\\redux\\reducers\\reduxActions\\actions.js":"9","D:\\react\\responsive-app\\resp-app\\src\\redux\\reducers\\rootReducer.js":"10","D:\\react\\responsive-app\\resp-app\\src\\common\\commonState.js":"11","D:\\react\\responsive-app\\resp-app\\src\\saga\\rootSaga.js":"12","D:\\react\\responsive-app\\resp-app\\src\\components\\Devloper.js":"13","D:\\react\\responsive-app\\resp-app\\src\\common\\apis.js":"14","D:\\react\\responsive-app\\resp-app\\src\\common\\apiUrl.js":"15","D:\\react\\responsive-app\\resp-app\\src\\serviceWorker.js":"16"},{"size":1621,"mtime":1611042391030,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":9592,"mtime":1611040287340,"results":"20","hashOfConfig":"18"},{"size":3724,"mtime":1610974299714,"results":"21","hashOfConfig":"18"},{"size":981,"mtime":1610969225692,"results":"22","hashOfConfig":"18"},{"size":3289,"mtime":1611040362112,"results":"23","hashOfConfig":"18"},{"size":2609,"mtime":1611038132922,"results":"24","hashOfConfig":"18"},{"size":846,"mtime":1611032580824,"results":"25","hashOfConfig":"18"},{"size":2362,"mtime":1611040479879,"results":"26","hashOfConfig":"18"},{"size":183,"mtime":1610953991132,"results":"27","hashOfConfig":"18"},{"size":649,"mtime":1610965454282,"results":"28","hashOfConfig":"18"},{"size":185,"mtime":1610966311585,"results":"29","hashOfConfig":"18"},{"size":1613,"mtime":1611044875568,"results":"30","hashOfConfig":"18"},{"size":178,"mtime":1611035821803,"results":"31","hashOfConfig":"18"},{"size":72,"mtime":1611035735569,"results":"32","hashOfConfig":"18"},{"size":5047,"mtime":1611042100421,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1si2tem",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"D:\\react\\responsive-app\\resp-app\\src\\index.js",["72","73","74","75"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nimport Login from './components/Login';\nimport Routes from './components/Routes';\nimport { createStore,applyMiddleware,compose,combineReducers  } from 'redux';\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport watchIncrement from '../src/saga/saga';\nimport {rootReducer } from '../src/redux/reducers/rootReducer';\nimport { loadState, saveState } from '../src/common/commonState';\nimport _ from \"lodash\";\nimport watchersRootSaga from './saga/rootSaga';\nimport * as serviceWorker from './serviceWorker';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const persistedState = loadState();\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  \n  \n  \n  const store = createStore(rootReducer,persistedState,\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n  );\n  \n  sagaMiddleware.run(watchersRootSaga);\n\n  store.subscribe(_.throttle(() => {\n    saveState(store.getState());\n  }, 1000));\n\nreturn store; \n}\n\nconst store = configureStore();\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Routes/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.register();\n",["76","77"],"D:\\react\\responsive-app\\resp-app\\src\\reportWebVitals.js",[],"D:\\react\\responsive-app\\resp-app\\src\\App.js",["78","79","80","81","82","83","84","85","86"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Logo from \"./images/avatar.png\";\nimport { Card, Button, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport Background from './images/colorful.jpg'; \nimport { connect } from \"react-redux\";\nimport {showAleart,closeAleart, add, sub, reset,\n  showDevName,LogoutAction,getPostsAction} from './redux/reducers/reduxActions/actions'\n\nfunction App(props) {\n  let [posts, setPosts] = useState(props.allPosts);\n  let [allData, setAllData] = useState(props.allPosts);\n  let [showPosts, setShow] = useState(false);\n  let [rowData, setRowData] = useState(\"\");\n  let [search, setSearch] = useState(\"\");\n  let [found,setFound] = useState([]);\n  let [myData, setMyData] = useState([\n    {\n      userId: 1,\n      id: 1,\n      title: \"delectus aut autem\",\n      completed: false,\n    },\n    {\n      userId: 1,\n      id: 2,\n      title: \"quis ut nam facilis et officia qui\",\n      completed: false,\n    },\n    { userId: 1, id: 3, title: \"fugiat veniam minus\", completed: false },\n  ]);\n  let [title, setTitle] = useState(\"\");\n  let [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    let mounted = true;\n    console.log(\"useeffectrun\");\n\n    // getPosts();\n    if (search ) {\n      console.log(\"ifblockuse\",JSON.parse (search))\n      setTimeout(() => {\n        b(JSON.parse(search))\n      }, 500);\n        \n \n      console.log(\"ifblockuse data1\",found)\n    }\n\n    \n      setPosts(props.allPosts)\n      setAllData(props.allPosts)\n    \n    console.log(\"ifblockuse data\",b())\n    console.log(\"useeffect App posts\", posts);\n    console.log(\"useeffect App  allData\", allData);\n    return () => (mounted = false);\n  }, [props]);\n\n  // const getPosts = () => {\n  //   if (posts.length === 0) {\n  //     return axios\n  //       .get(\"http://jsonplaceholder.typicode.com/todos\")\n  //       .then((rst) => {\n  //         console.log(rst);\n  //         if (rst) {\n  //           setPosts((rst.data));\n  //           setAllData(rst.data)\n  //         }\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //   }\n  // };\n\n  const getRowData = (data) => {\n    console.log(\"row Data\", data);\n    setRowData(data);\n  };\n\n  const showAllPosts = () => {\n    console.log(\"Showpostcall\")\n    let Login = \"Login\";\n    setShow(true);\n  if (posts.length == 0 && allData.length == 0 ) {\n    props.getPostsAction(Login); \n  }\n   \n    \n\n    \n   \n    console.log(\"my Array\", myData);\n\n  };\n\n  const hideAllPosts = () => {\n    setShow(false);\n  };\n\n  const addTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const addUser = (e) => {\n    setUser(e.target.value);\n  };\n\n  const submitDetail = (e) => {\n    e.preventDefault();\n    if (title === \"\" || user === \"\") {\n      alert(\"Blank not allowed\");\n    }\n    let Data = {\n      title: title,\n      id: user,\n    };\n\n    posts.push(Data);\n    allData.push(Data);\n\n    setTitle(\"\");\n    setUser(\"\");\n  };\n\n  const logOut = () => {\n    let Logout = \"Logout\"\n    props.LogoutAction()\n    props.getPostsAction(Logout);\n     props.history.push(\"/\");\n  };\n\n  const removePost = (data) => {\n    console.log(\"removeclick\", data);\n    const newData = posts.filter((rst, id) => {\n      return rst.title !== data.title;\n    });\n\n    setPosts(newData);\n    setAllData(newData)\n  };\n\n const searchHandler= (e)=>{\n\n  const val = e.target.value\n   setSearch(val)\n   if (val !== search) {\n    console.log(\"if searchfinal\",b())\n   }\n\n   \n\n \n  }\n\n  function b(idToSearch) {\n    if (idToSearch && search !== \"\") {\n    let foundrst=  allData.filter(item => {\n        console.log(\"ifblockuse function b\",item.id,idToSearch)\n        return   item.id == (idToSearch)\n      })\nconsole.log(\"if dataaaaafound\",foundrst)\n      setFound(foundrst);\n      setPosts(foundrst)\n    }\n\n\n    \n  };\n\n\n\n  return (\n    \n    <div class=\"container\" style={{ \n      backgroundColor:'whitesmoke',\n      backgroundImage:`url(${Background})`, \n      height:showPosts ? \"\" : '100vh' }}>\n        \n      <div class=\"row\" style={{ backgroundColor: \"teal\",height:40 }}>\n        <div class=\"col-8\">\n          <h2 style={{ color: \"whitesmoke\" }}>{props.title}</h2>  \n         \n        </div>\n        \n        <div class=\"col-4\">\n          <div\n            style={{\n              display: \"flex\",\n              color: \"#000\",\n              justifyContent: \"flex-end\",\n            }}\n            onClick={logOut}\n          >\n        <img src={Logo} width=\"30px\" height=\"30px\" /> &nbsp; <p>Logout</p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\" style={{ marginTop: \"20px\" }}>\n        <div class=\"col-8\">\n          <button\n            class=\"btn btn-success sm\"\n            onClick={showAllPosts}\n            style={{ width: \"100px\" }}\n          >\n            Show Posts\n          </button>\n        </div>\n\n        <div class=\"col-4\">\n          <button class=\"btn btn-primary sm\" onClick={hideAllPosts}>\n            Hide Posts\n          </button>\n        </div>\n      </div>\n\n      {rowData && showPosts && (\n        <div>\n          <lable>Selected Row Details are :</lable> <br />\n          <lable> Post Title : {rowData.title}</lable>\n          <br />\n          <lable> Post Created By : {rowData.userId}</lable>\n          <br />\n          <lable> Is Completed : {JSON.stringify(rowData.completed)}</lable>\n        </div>\n      )}\n\n      <div class=\"form-group\">\n        {\" \"}\n        <br />\n        <form onSubmit={submitDetail}>\n          <input\n            class=\"form-control\"\n            placeholder=\"*Enter title\"\n            value={title}\n            onChange={addTitle}\n            name=\"title\"\n          />{\" \"}\n          <br />\n          <input\n            class=\"form-control\"\n            placeholder=\"*Enter userid\"\n            value={user}\n            onChange={addUser}\n            name=\"password\"\n          />\n          <br />\n          <input\n            type=\"submit\"\n            style={{ borderRadius: \"16px\" }}\n            class=\"btn btn-danger\"\n          />\n        </form>\n      </div> <br/>\n\n      <input\n            class=\"form-control\"\n            placeholder=\"search id\"\n            value={search}\n            type='number'\n            onChange={searchHandler.bind(this)}\n          />{\" \"}\n\n\n      <hr />\n      <div><Link to ='/dev'><a>Connect to Developer</a></Link></div> <br/>\n      {/* <div onClick={()=>props.getPostsAction()}><p>GET_POSTS</p></div> <br/> */}\n  {\n    !showPosts && (\n      <Card style={{backgroundColor:'silver'}}>\n      <Card.Content >\n        <Card.Header>{props.count}</Card.Header>\n        <Card.Meta>Counter updating from Reducer</Card.Meta>\n      </Card.Content>\n      <Card.Content extra>\n        <div class=\"ui three buttons\">\n          <Button basic color=\"green\" onClick={()=>props.add(1)}>\n            Add\n          </Button>\n          <Button\n            basic\n            color=\"red\"\n            onClick={()=>props.sub(1)}\n          >\n            Subs\n          </Button>\n          <Button\n            basic\n            color=\"blue\"\n            onClick={()=>props.reset()}\n          >\n            Reset\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n    )\n  }\n      \n\n\n      {\n        showPosts && (\n          <Card.Group>\n         { search ?  posts.map((data, i) => {\n          return (\n            <Card key={data.id}>\n              <Card.Content onClick={getRowData.bind(this, data)}>\n                <Image floated=\"right\" size=\"mini\" src={Logo} />\n                <Card.Header>{data.id}</Card.Header>\n                <Card.Meta>{JSON.stringify(data.completed)}</Card.Meta>\n                <Card.Description>{data.title}</Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <div class=\"ui two buttons\">\n                  <Button basic color=\"green\">\n                    Approve\n                  </Button>\n                  <Button\n                    basic\n                    color=\"red\"\n                    onClick={removePost.bind(this, data)}\n                  >\n                    Remove\n                  </Button>\n                </div>\n              </Card.Content>\n            </Card>\n          );\n        }) : allData.map((data, i) => {\n          return (\n            <Card key={data.user}>\n              <Card.Content onClick={getRowData.bind(this, data)}>\n                <Image floated=\"right\" size=\"mini\" src={Logo} />\n                <Card.Header>{data.id}</Card.Header>\n                <Card.Meta>{JSON.stringify(data.completed)}</Card.Meta>\n                <Card.Description>{data.title}</Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <div class=\"ui two buttons\">\n                  <Button basic color=\"green\">\n                    Approve\n                  </Button>\n                  <Button\n                    basic\n                    color=\"red\"\n                    onClick={removePost.bind(this, data)}\n                  >\n                    Remove\n                  </Button>\n                </div>\n              </Card.Content>\n            </Card>\n          );\n        }) }\n      </Card.Group>\n        )\n      }\n      \n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    count:state.countRed.counter,\n    devName:state.countRed.devName,\n    title:state.countRed.title,\n    appToken:state.countRed.appToken,\n    allPosts:state.countRed.allPosts\n  };\n};\n\nexport default connect(mapStateToProps, \n  { showAleart, \n    closeAleart,\n    add,\n    sub,\n    reset,\n    showDevName,\n    LogoutAction,\n    getPostsAction \n})(App);\n\n","D:\\react\\responsive-app\\resp-app\\src\\components\\Login.js",["87","88","89"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Checkbox, Form } from \"semantic-ui-react\";\r\nimport Background from \"../images/colorful.jpg\";\r\nimport {saveTokenAction } from '../redux/reducers/reduxActions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Login = (props) => {\r\n  let [token, setToken] = useState(\"\");\r\n  let [user, setUser] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n  let [term, setTerm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"props\", props.history, token);\r\n\r\n    if (props.appToken !== null) {\r\n      //localStorage.setItem(\"token\", token);\r\n      props.history.push(\"/dashboard\");\r\n    }\r\n    else{\r\n      props.history.push(\"/\");\r\n    }\r\n  }, [props.appToken]);\r\n\r\n  const userNameHandler = (e) => {\r\n    setUser(e.target.value);\r\n  };\r\n\r\n  const passwordHandler = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  // const agreeHandler=(e,{data})=>{\r\n  // console.log(\"checkobox\",e,data)\r\n  // }\r\n\r\n  const agreeHandler = (e, { checked }) => {\r\n    console.log(\"Click\", checked);\r\n    setTerm(checked);\r\n  };\r\n\r\n  const loginHandler =  () => {\r\n    console.log(\"logincall\")\r\n    if (user === \"\" && password === \"\") {\r\n      alert(\"Enter Inputs to Login\");\r\n    }\r\n   else if (user === \"nitin\" && password === '123') {\r\n      const tokDat = \"_\" + Math.random().toString(36).substr(2, 9);\r\n      console.log(\"tooookekn 1\", tokDat);\r\n      setToken(tokDat);\r\n      props.saveTokenAction(tokDat);\r\n\r\n      // alert(\"Login Successfully\")\r\n      setUser(\"\");\r\n      setPassword(\"\");\r\n      console.log(\"tooookekn 2\", token);\r\n    }    \r\n     else  if (user !== \"nitin\" ) {\r\n        \r\n        alert(\"Invalid Userid\");\r\n      }\r\n      else  if ( password !== '123') {\r\n        \r\n        alert(\"Invalid Password\");\r\n      }\r\n    \r\n  };\r\n\r\n  const confirmHandler = () => {\r\n    alert(\"select agree for t&c\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"whitesmoke\",\r\n        height: \"100vh\",\r\n        backgroundImage: `url(${Background})`,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          alignContent: \"center\",\r\n          alignItems: \"center\",\r\n          marginTop: \"150px\",\r\n        }}\r\n      >\r\n        <h1 style={{ textAlign: \"center\", color: \"silver\" }}>Login</h1>\r\n        <Form onSubmit={ loginHandler }>\r\n          <Form.Field>\r\n            <label style={{ color: \"#fff\" }}>User Name</label>\r\n            <input\r\n              placeholder=\"User Name\"\r\n              onChange={userNameHandler}\r\n              value={user}\r\n              style={{ borderRadius: \"20px\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label style={{ color: \"#fff\" }}>Password</label>\r\n            <input\r\n              placeholder=\"Password\"\r\n              onChange={passwordHandler}\r\n              value={password}\r\n              style={{ borderRadius: \"20px\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Checkbox\r\n              label=\"I agree to the Terms and Conditions\"\r\n              onClick={agreeHandler}\r\n            />\r\n          </Form.Field>\r\n          <Button\r\n            type=\"submit\"\r\n            class=\"ui primary button\"\r\n            style={{ marginLeft: \"30%\" }}\r\n          >\r\n            Signin\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    count:state.countRed.counter,\r\n    devName:state.countRed.devName,\r\n    title:state.countRed.title,\r\n    appToken:state.countRed.appToken,\r\n  \r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, \r\n  { saveTokenAction })(Login);\r\n\r\n","D:\\react\\responsive-app\\resp-app\\src\\components\\Routes.js",["90","91"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport Login from \"./Login\";\r\nimport App from \"../App\";\r\nimport Devloper from \"./Devloper\";\r\n\r\nconst Routes = (props) => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n       {\r\n         props.appToken !== null ? \r\n         <Switch>\r\n           <Route exact path=\"/dashboard\" component={App} />\r\n\r\n           <Route exact path=\"/dev\" component={Devloper} />\r\n           </Switch>\r\n         : \"\"\r\n\r\n       }\r\n        \r\n      \r\n          \r\n    \r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    count:state.countRed.counter,\r\n    devName:state.countRed.devName,\r\n    title:state.countRed.title,\r\n    appToken:state.countRed.appToken,\r\n  \r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, \r\n  {  })(Routes);\r\n\r\n","D:\\react\\responsive-app\\resp-app\\src\\saga\\saga.js",[],"D:\\react\\responsive-app\\resp-app\\src\\redux\\reducers\\countReducer.js",["92","93","94"],"import React from \"react\";\r\nimport {\r\n    INCREMENT_ACT,\r\n  DECREMENT_ACT,\r\n  ADD,\r\n  SUB,\r\n  RESET,\r\n  INCREMENT_ASYNC,\r\n  SHOW_ALEART,\r\n  CLOSE_ALEART,\r\n  SEND_SUCCESS,\r\n  SHOW_NAME,\r\n  SAVE_TOKEN,\r\n  LOG_OUT,\r\n  GET_POSTS_LOADING,\r\n  GET_POSTS_SUCCESS,\r\n  GET_POSTS_ERROR\r\n} from  '../../actions/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n  counter: 5,\r\n  showAleart: false,\r\n  apiDataUse:{},\r\n  devName:'',\r\n  title:\"React CRUD App\",\r\n  appToken:null,\r\n  isLoading:false,\r\n  isError:false,\r\n  allPosts:null\r\n};\r\n\r\nconst CounterReducer = (state = initialState, action) => {\r\n  console.log(\"Reducer Call\")\r\n  switch (action.type) {\r\n    case INCREMENT_ASYNC:\r\n      return { ...state, counter: state.counter + 1 };\r\n    case DECREMENT_ACT:\r\n      return { ...state, counter: state.counter - 1 };\r\n    case ADD:\r\n      return { ...state, counter: state.counter + action.payload.number };\r\n    case SUB:\r\n      return { ...state, counter: state.counter - action.payload.number };\r\n    case RESET:\r\n      return { ...state, counter: 0 };\r\n    case INCREMENT_ASYNC:\r\n      return { ...state, counter: state.counter };\r\n    case SHOW_ALEART:\r\n      return { ...state, showAleart: true };\r\n    case CLOSE_ALEART:\r\n      return { ...state, showAleart: false };\r\n      case SEND_SUCCESS:\r\n          console.log(\"SEND_SUCCESSCALL\",action.payload)\r\n        return { ...state,\r\n          apiDataUse:action.payload.apiData};\r\n\r\n          case SHOW_NAME:\r\n            console.log(\"SHOW_NAME REDUCER\",action.payload)\r\n          return { \r\n              ...state,\r\n              devName:\"Nitin\"\r\n            };\r\n            case SAVE_TOKEN:\r\n                console.log(\"SAVE_TOKEN Reducer\",action.payload)\r\n              return { ...state,\r\n                appToken:action.payload.tokenData};\r\n\r\n                case LOG_OUT:\r\n                console.log(\"LOG_OUT Reducer\",action.payload)\r\n              return { ...state,\r\n                appToken:null\r\n            };\r\n            case GET_POSTS_LOADING:\r\n              console.log(\"GET_POSTS_LOADING\",action.payload)\r\n            return { ...state,\r\n              isLoading:true\r\n          };\r\n          case GET_POSTS_SUCCESS:\r\n            console.log(\"GET_POSTS_SUCCESS Reducer\",action.payload)\r\n          return { \r\n            ...state,\r\n            allPosts:action.payload.postsData\r\n        };\r\n        case GET_POSTS_ERROR:\r\n          console.log(\"GET_POSTS_ERROR Reducer\",action.payload)\r\n        return { \r\n          ...state,\r\n          isError:action.payload.apiError\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default CounterReducer;\r\n","D:\\react\\responsive-app\\resp-app\\src\\actions\\actionTypes.js",[],"D:\\react\\responsive-app\\resp-app\\src\\redux\\reducers\\reduxActions\\actions.js",[],"D:\\react\\responsive-app\\resp-app\\src\\redux\\reducers\\rootReducer.js",[],"D:\\react\\responsive-app\\resp-app\\src\\common\\commonState.js",[],"D:\\react\\responsive-app\\resp-app\\src\\saga\\rootSaga.js",[],"D:\\react\\responsive-app\\resp-app\\src\\components\\Devloper.js",["95","96","97"],"D:\\react\\responsive-app\\resp-app\\src\\common\\apis.js",[],"D:\\react\\responsive-app\\resp-app\\src\\common\\apiUrl.js",[],"D:\\react\\responsive-app\\resp-app\\src\\serviceWorker.js",[],{"ruleId":"98","severity":1,"message":"99","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":11},{"ruleId":"98","severity":1,"message":"102","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":13},{"ruleId":"98","severity":1,"message":"103","line":9,"column":46,"nodeType":"100","messageId":"101","endLine":9,"endColumn":61},{"ruleId":"98","severity":1,"message":"104","line":12,"column":8,"nodeType":"100","messageId":"101","endLine":12,"endColumn":22},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"98","severity":1,"message":"109","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":13},{"ruleId":"98","severity":1,"message":"110","line":18,"column":16,"nodeType":"100","messageId":"101","endLine":18,"endColumn":25},{"ruleId":"98","severity":1,"message":"111","line":58,"column":19,"nodeType":"100","messageId":"101","endLine":58,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":59,"column":6,"nodeType":"114","endLine":59,"endColumn":13,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":87,"column":20,"nodeType":"118","messageId":"119","endLine":87,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":87,"column":43,"nodeType":"118","messageId":"119","endLine":87,"endColumn":45},{"ruleId":"116","severity":1,"message":"117","line":162,"column":26,"nodeType":"118","messageId":"119","endLine":162,"endColumn":28},{"ruleId":"120","severity":1,"message":"121","line":197,"column":9,"nodeType":"122","endLine":197,"endColumn":54},{"ruleId":"123","severity":1,"message":"124","line":269,"column":29,"nodeType":"122","endLine":269,"endColumn":32},{"ruleId":"98","severity":1,"message":"125","line":11,"column":8,"nodeType":"100","messageId":"101","endLine":11,"endColumn":12},{"ruleId":"112","severity":1,"message":"126","line":23,"column":6,"nodeType":"114","endLine":23,"endColumn":22,"suggestions":"127"},{"ruleId":"98","severity":1,"message":"128","line":69,"column":9,"nodeType":"100","messageId":"101","endLine":69,"endColumn":23},{"ruleId":"98","severity":1,"message":"129","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"130","line":2,"column":40,"nodeType":"100","messageId":"101","endLine":2,"endColumn":44},{"ruleId":"98","severity":1,"message":"131","line":1,"column":8,"nodeType":"100","messageId":"101","endLine":1,"endColumn":13},{"ruleId":"98","severity":1,"message":"132","line":3,"column":5,"nodeType":"100","messageId":"101","endLine":3,"endColumn":18},{"ruleId":"133","severity":1,"message":"134","line":46,"column":5,"nodeType":"135","messageId":"119","endLine":47,"endColumn":51},{"ruleId":"120","severity":1,"message":"121","line":29,"column":9,"nodeType":"122","endLine":29,"endColumn":54},{"ruleId":"120","severity":1,"message":"121","line":37,"column":7,"nodeType":"122","endLine":37,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":42,"column":9,"nodeType":"122","endLine":42,"endColumn":12},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'combineReducers' is defined but never used.","'watchIncrement' is defined but never used.","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"'axios' is defined but never used.","'setMyData' is assigned a value but never used.","'mounted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allData', 'b', 'found', 'posts', and 'search'. Either include them or remove the dependency array.","ArrayExpression",["138"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'term' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'token'. Either include them or remove the dependency array.",["139"],"'confirmHandler' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'React' is defined but never used.","'INCREMENT_ACT' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [allData, b, found, posts, props, search]",{"range":"144","text":"145"},"Update the dependencies array to be: [props.appToken, props.history, token]",{"range":"146","text":"147"},[1715,1722],"[allData, b, found, posts, props, search]",[737,753],"[props.appToken, props.history, token]"]